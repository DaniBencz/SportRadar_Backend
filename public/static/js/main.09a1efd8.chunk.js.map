{"version":3,"sources":["banner.jpg","components/Tournament.js","Messi.jpeg","components/Stats.js","App.js","reportWebVitals.js","index.js"],"names":["Tournament","tournamentData","map","data","index","dateAndTime","teams","score","events","home","away","event","Stats","stats","id","class","src","Messi","style","width","alt","Object","keys","tournamentName","margin","App","useState","setStats","getStats","fetch","window","location","origin","then","res","json","catch","useEffect","setInterval","className","banner","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAAe,MAA0B,mC,eC6B1BA,EA7BI,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACpB,OACE,kCACE,gCACE,+BACE,4CACA,uCACA,uCACA,6CAGJ,gCACGA,EAAeC,KAAI,SAACC,EAAMC,GAAW,IAC5BC,EAAsCF,EAAtCE,YAAaC,EAAyBH,EAAzBG,MAAOC,EAAkBJ,EAAlBI,MAAOC,EAAWL,EAAXK,OACnC,OACE,+BACE,6BAAKH,IACL,+BAAKC,EAAMG,KAAX,MAAoBH,EAAMI,QAC1B,+BAAKH,EAAME,MAAQ,EAAnB,MAAyBF,EAAMG,MAAQ,KACvC,6BAAI,8BAAMF,EAAON,KAAI,SAACS,GACpB,OAAO,4BAAIA,aALNP,YCfN,MAA0B,mCCkB1BQ,EAfD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OACE,sBAAKC,GAAG,QAAR,UACE,qBAAKC,MAAM,WAAWC,IAAKC,EAAOC,MAAO,CAAEC,MAAO,SAAWC,IAAI,iBAChEC,OAAOC,KAAKT,GAAOX,KAAI,SAACqB,EAAgBnB,GACvC,OACE,gCACE,oBAAIc,MAAO,CAAEM,OAAQ,OAArB,SAA+BD,IAC/B,cAAC,EAAD,CAAwBtB,eAAgBY,EAAMU,IAA7BnB,KAFTA,UCqBLqB,MAzBf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNb,EADM,KACCc,EADD,KAGPC,EAAW,WACfC,MAAM,GAAD,OAAIC,OAAOC,SAASC,OAApB,aACFC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAApB,GAAK,OAAIc,EAASd,MACvBuB,SAQL,OALAC,qBAAU,WACRT,IACAU,aAAY,kBAAMV,MAAY,OAC7B,IAGD,sBAAKW,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,qBAAKvB,IAAKwB,EAAQtB,MAAO,CAAEC,MAAO,SAAUC,IAAI,wBAElD,cAAC,EAAD,CAAOP,MAAOA,QCbL4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.09a1efd8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/banner.31083f0f.jpg\";","const Tournament = ({ tournamentData }) => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Match Date</th>\n          <th>Teams</th>\n          <th>Score</th>\n          <th>Events</th>\n        </tr>\n      </thead>\n      <tbody>\n        {tournamentData.map((data, index) => {\n          const { dateAndTime, teams, score, events } = data;\n          return (\n            <tr key={index}>\n              <td>{dateAndTime}</td>\n              <td>{teams.home} - {teams.away}</td>\n              <td>{score.home || 0} - {score.away || 0}</td>\n              <td><div>{events.map((event) => {\n                return <p>{event}</p>\n              })}</div></td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\nexport default Tournament;\n","export default __webpack_public_path__ + \"static/media/Messi.33a64459.jpeg\";","import Tournament from './Tournament';\nimport Messi from '../Messi.jpeg'\n\nconst Stats = ({ stats }) => {\n  return (\n    <div id=\"stats\">\n      <img class=\"stats-bg\" src={Messi} style={{ width: \"500px\" }} alt=\"Lionel Messi\"/>\n      {Object.keys(stats).map((tournamentName, index) => {\n        return (\n          <div key={index} >\n            <h3 style={{ margin: \"3px\" }}>{tournamentName}</h3>\n            <Tournament key={index} tournamentData={stats[tournamentName]} />\n          </div>\n        );\n      })}\n    </div >\n  );\n};\nexport default Stats;\n","import banner from './banner.jpg';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport Stats from './components/Stats';\n\nfunction App() {\n  const [stats, setStats] = useState({});\n\n  const getStats = () => {\n    fetch(`${window.location.origin}/matches`)\n      .then(res => res.json())\n      .then(stats => setStats(stats))\n      .catch();\n  };\n\n  useEffect(() => {\n    getStats();\n    setInterval(() => getStats(), 600 * 1000);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={banner} style={{ width: \"500px\"}} alt=\"sportradar banner\"/>\n      </header>\n      <Stats stats={stats}></Stats>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}