{"version":3,"sources":["components/TournamentTable.jsx","Messi.jpeg","components/TournamentsContainer.jsx","github.png","App.jsx","reportWebVitals.js","index.jsx"],"names":["TournamentTable","matches","map","data","mid","uts","teams","score","events","date","Date","dateString","getMonth","getDate","getHours","getMinutes","className","home","away","eid","event","TournamentsContainer","stats","id","src","Messi","alt","Object","keys","tournamentID","name","App","useState","setStats","getResults","fetch","then","res","json","catch","useEffect","setInterval","href","target","rel","GitHub","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAoDeA,EAlDS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACtB,kCACE,gCACE,+BACE,4CACA,uCACA,uCACA,6CAGJ,gCACGA,EAAQC,KAAI,SAACC,GAAU,IAEpBC,EACED,EADFC,IAAKC,EACHF,EADGE,IAAKC,EACRH,EADQG,MAAOC,EACfJ,EADeI,MAAOC,EACtBL,EADsBK,OAEpBC,EAAO,IAAIC,KAAW,IAANL,GAChBM,EAAU,UAAMF,EAAKG,WAAa,EAAxB,cAA+BH,EAAKI,UAApC,cAAmDJ,EAAKK,WAAxD,YAAsEL,EAAKM,cAC3F,OACE,+BACE,oBAAIC,UAAU,aAAd,SAA4BL,IAC5B,qBAAIK,UAAU,QAAd,UACGV,EAAMW,KACN,IAFH,IAIG,IACAX,EAAMY,QAET,+BACGX,EAAMU,MAAQ,EACd,IAFH,IAIG,IACAV,EAAMW,MAAQ,KAEjB,6BACE,8BACGV,EAAON,KAAI,gBAAGiB,EAAH,EAAGA,IAAKC,EAAR,EAAQA,MAAR,OAAoB,4BAAcA,GAAND,YAlBrCf,YCpBJ,MAA0B,mCCyB1BiB,EArBc,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAC3B,sBAAKC,GAAG,wBAAR,UACE,qBAAKP,UAAU,iBAAiBQ,IAAKC,EAAOC,IAAI,iBAC/CC,OAAOC,KAAKN,GAAOpB,KAAI,SAAC2B,GAAD,OACtB,gCACE,6BAAKP,EAAMO,GAAcC,OACzB,cAAC,EAAD,CAAoC7B,QAASqB,EAAMO,GAAc5B,SAA3C4B,KAFdA,UCRD,MAA0B,mCCgC1BE,MA3Bf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNV,EADM,KACCW,EADD,KAGPC,EAAa,WACjBC,MAAM,YACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GAAD,OAASJ,EAASI,MACvBE,SAQL,OALAC,qBAAU,WACRN,IACAO,aAAY,kBAAMP,MAAc,OAC/B,IAGD,sBAAKlB,UAAU,MAAf,UACE,wBAAQA,UAAU,SAAlB,SACE,mBAAG0B,KAAK,kDAAkDC,OAAO,SAASC,IAAI,aAA9E,SACE,qBAAK5B,UAAU,cAAcQ,IAAKqB,EAAQnB,IAAI,uBAGlD,cAAC,EAAD,CAAOJ,MAAOA,QCbLwB,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAEnB,IADLa,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.f49bce13.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst TournamentTable = ({ matches }) => (\n  <table>\n    <thead>\n      <tr>\n        <th>Match Date</th>\n        <th>Teams</th>\n        <th>Score</th>\n        <th>Events</th>\n      </tr>\n    </thead>\n    <tbody>\n      {matches.map((data) => {\n        const {\n          mid, uts, teams, score, events,\n        } = data;\n        const date = new Date(uts * 1000);\n        const dateString = `${date.getMonth() + 1} / ${date.getDate()} - ${date.getHours()}:${date.getMinutes()}`;\n        return (\n          <tr key={mid}>\n            <td className=\"match-time\">{dateString}</td>\n            <td className=\"teams\">\n              {teams.home}\n              {' '}\n              -\n              {' '}\n              {teams.away}\n            </td>\n            <td>\n              {score.home || 0}\n              {' '}\n              -\n              {' '}\n              {score.away || 0}\n            </td>\n            <td>\n              <div>\n                {events.map(({ eid, event }) => <p key={eid}>{event}</p>)}\n              </div>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n\nTournamentTable.propTypes = {\n  matches: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default TournamentTable;\n","export default __webpack_public_path__ + \"static/media/Messi.33a64459.jpeg\";","import PropTypes from 'prop-types';\nimport TournamentTable from './TournamentTable';\nimport Messi from '../Messi.jpeg';\n\nconst TournamentsContainer = ({ stats }) => (\n  <div id=\"tournaments-container\">\n    <img className=\"tournaments-bg\" src={Messi} alt=\"Lionel Messi\" />\n    {Object.keys(stats).map((tournamentID) => (\n      <div key={tournamentID}>\n        <h3>{stats[tournamentID].name}</h3>\n        <TournamentTable key={tournamentID} matches={stats[tournamentID].matches} />\n      </div>\n    ))}\n  </div>\n);\n\nTournamentsContainer.propTypes = {\n  stats: PropTypes.shape({\n    [PropTypes.number]: PropTypes.shape({\n      name: PropTypes.string,\n      matches: PropTypes.arrayOf(PropTypes.object),\n    }),\n  }).isRequired,\n};\n\nexport default TournamentsContainer;\n","export default __webpack_public_path__ + \"static/media/github.62756000.png\";","import './App.css';\nimport { useState, useEffect } from 'react';\nimport Stats from './components/TournamentsContainer';\nimport GitHub from './github.png';\n\nfunction App() {\n  const [stats, setStats] = useState({});\n\n  const getResults = () => {\n    fetch('/results')\n      .then((res) => res.json())\n      .then((res) => setStats(res))\n      .catch();\n  };\n\n  useEffect(() => {\n    getResults();\n    setInterval(() => getResults(), 600 * 1000);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <a href=\"https://github.com/DaniBencz/SportRadar_Backend\" target=\"_blank\" rel=\"noreferrer\">\n          <img className=\"github-icon\" src={GitHub} alt=\"link to GitHub\" />\n        </a>\n      </header>\n      <Stats stats={stats} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}