{"version":3,"sources":["components/TournamentTable.js","Messi.jpeg","components/TournamentsContainer.js","App.js","reportWebVitals.js","index.js"],"names":["TournamentTable","tournamentData","map","data","index","uts","teams","score","events","date","Date","dateString","getMonth","getDate","getHours","getMinutes","className","home","away","event","i","TournamentsContainer","stats","id","src","Messi","alt","Object","keys","tournamentName","App","useState","setStats","getResults","fetch","then","res","json","catch","useEffect","setInterval","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NA+BeA,EA/BS,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACzB,OACE,kCACE,gCACE,+BACE,4CACA,uCACA,uCACA,6CAGJ,gCACGA,EAAeC,KAAI,SAACC,EAAMC,GAAW,IAC5BC,EAA8BF,EAA9BE,IAAKC,EAAyBH,EAAzBG,MAAOC,EAAkBJ,EAAlBI,MAAOC,EAAWL,EAAXK,OACrBC,EAAO,IAAIC,KAAW,IAANL,GAChBM,EAAU,WAAOF,EAAKG,WAAa,EAAzB,cAAgCH,EAAKI,UAArC,cAAoDJ,EAAKK,WAAzD,YAAuEL,EAAKM,cAC5F,OACE,+BACE,oBAAIC,UAAU,aAAd,SAA4BL,IAC5B,qBAAIK,UAAU,QAAd,UAAuBV,EAAMW,KAA7B,MAAsCX,EAAMY,QAC5C,+BAAKX,EAAMU,MAAQ,EAAnB,MAAyBV,EAAMW,MAAQ,KACvC,6BAAI,8BAAMV,EAAON,KAAI,SAACiB,EAAOC,GAC3B,OAAO,4BAAYD,GAAJC,YALVhB,YCjBN,MAA0B,mCCkB1BiB,EAfc,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC9B,OACE,sBAAKC,GAAG,wBAAR,UACE,qBAAKP,UAAU,iBAAiBQ,IAAKC,EAAOC,IAAI,iBAC/CC,OAAOC,KAAKN,GAAOpB,KAAI,SAAC2B,EAAgBzB,GACvC,OACE,gCACE,6BAAMyB,IACN,cAAC,EAAD,CAA6B5B,eAAgBqB,EAAMO,IAA7BzB,KAFdA,UCkBL0B,MAvBf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNT,EADM,KACCU,EADD,KAGPC,EAAa,WACjBC,MAAM,YACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAb,GAAK,OAAIU,EAASV,MACvBgB,SAQL,OALAC,qBAAU,WACRN,IACAO,aAAY,kBAAMP,MAAc,OAC/B,IAGD,sBAAKjB,UAAU,MAAf,UACE,wBAAQA,UAAU,WAClB,cAAC,EAAD,CAAOM,MAAOA,QCVLmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.eb497797.chunk.js","sourcesContent":["const TournamentTable = ({ tournamentData }) => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Match Date</th>\n          <th>Teams</th>\n          <th>Score</th>\n          <th>Events</th>\n        </tr>\n      </thead>\n      <tbody>\n        {tournamentData.map((data, index) => {\n          const { uts, teams, score, events } = data;\n          const date = new Date(uts * 1000);\n          const dateString = ` ${date.getMonth() + 1} / ${date.getDate()} - ${date.getHours()}:${date.getMinutes()}`;\n          return (\n            <tr key={index}>\n              <td className=\"match-time\">{dateString}</td>\n              <td className=\"teams\">{teams.home} - {teams.away}</td>\n              <td>{score.home || 0} - {score.away || 0}</td>\n              <td><div>{events.map((event, i) => {\n                return <p key={i}>{event}</p>;\n              })}</div></td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\nexport default TournamentTable;\n","export default __webpack_public_path__ + \"static/media/Messi.33a64459.jpeg\";","import TournamentTable from './TournamentTable';\nimport Messi from '../Messi.jpeg';\n\nconst TournamentsContainer = ({ stats }) => {\n  return (\n    <div id=\"tournaments-container\">\n      <img className=\"tournaments-bg\" src={Messi} alt=\"Lionel Messi\" />\n      {Object.keys(stats).map((tournamentName, index) => {\n        return (\n          <div key={index} >\n            <h3 >{tournamentName}</h3>\n            <TournamentTable key={index} tournamentData={stats[tournamentName]} />\n          </div>\n        );\n      })}\n    </div >\n  );\n};\nexport default TournamentsContainer;\n","import './App.css';\nimport { useState, useEffect } from 'react';\nimport Stats from './components/TournamentsContainer';\n\nfunction App() {\n  const [stats, setStats] = useState({});\n\n  const getResults = () => {\n    fetch(`/results`)\n      .then(res => res.json())\n      .then(stats => setStats(stats))\n      .catch();\n  };\n\n  useEffect(() => {\n    getResults();\n    setInterval(() => getResults(), 600 * 1000);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\" />\n      <Stats stats={stats}></Stats>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}